name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:
    inputs: 
        environment:
            description: 'Deployment Environment'
            required: true
            default: 'production'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.16.1

      - name: Install dependencies
        run: |
          npm install

      - name: Build Docker image
        run: docker build -t elohim237/repoevaluation:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push elohim237/repoevaluation:latest

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.16.1

      - name: Run Tests
        run: |
          npm install
          npm test

  deploy:
    name: Deploy to production server
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: SSH into the server and deploy using Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_PROD }}
          username: ${{ secrets.SSH_USER_PROD }}
          password: ${{ secrets.SSH_PASSWORD_PROD }}
          port: 22
          script: |
            # Aller dans le répertoire de l'application
            cd ${{ secrets.SSH_PATH_PROD }}

            # Arrêter et supprimer le conteneur en cours d'exécution
            docker stop evaluation || true
            docker rm evaluation || true

            # Télécharger la nouvelle image depuis Docker Hub
            docker pull elohim237/repoevaluation:${{ github.sha }}

            # Créer un nouveau conteneur à partir de l'image
            docker run -d --name evaluation -p 3001:3001 --env-file .env elohim237/repoevaluation:latest
            # Vérifier que le conteneur est en cours d'exécution
            docker ps
