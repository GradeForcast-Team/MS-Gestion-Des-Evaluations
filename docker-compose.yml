version: "3.9"

services:
  proxy:
    container_name: proxy
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      - backend

  mysql:
    container_name: mysqlGrade
    image: mysql:8.0  # Utilisation de l'image officielle de MySQL
    environment:
      MYSQL_ROOT_PASSWORD: Grade   # Mot de passe root
      MYSQL_DATABASE: bd_noteforecast  # Nom de la base de données
      MYSQL_USER: user  # Nom de l'utilisateur MySQL
      MYSQL_PASSWORD: GradeForecast1  # Mot de passe de l'utilisateur MySQL
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend

  backend:
    container_name: evaluation
    build:
      context: ./
      dockerfile: Dockerfile.dev  # Utilise le Dockerfile de production pour le backend
    environment:
      DATABASE_URL: mysql://user:GradeForecast1@mysqlGrade:3306/bd_noteforecast # URL de connexion à MySQL
    depends_on:
      - mysql  # Assure que MySQL démarre avant le backend
    ports:
      - "3001:3001"  # Port d'exposition du backend
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysql-data:
    driver: local
